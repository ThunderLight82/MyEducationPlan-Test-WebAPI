// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ProjectFeedbackModule.DataAccess;

#nullable disable

namespace ProjectFeedbackModule.DataAccess.Migrations
{
    [DbContext(typeof(ProjectModuleDbContext))]
    [Migration("20250603141558_Recreated migration")]
    partial class Recreatedmigration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ProjectFeedbackModule.Domain.Entities.InternProject", b =>
                {
                    b.Property<int>("ProjectId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProjectId"));

                    b.Property<int>("EstimatedBudget")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Owner")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ProjectId");

                    b.ToTable("InternProjects");

                    b.HasData(
                        new
                        {
                            ProjectId = 1,
                            EstimatedBudget = 1800,
                            Name = "Online Store",
                            Owner = "Vitaliy Kovalchuk"
                        },
                        new
                        {
                            ProjectId = 2,
                            EstimatedBudget = 1000,
                            Name = "Find Missing People - Volunteer project",
                            Owner = "Olexander Borozuy"
                        });
                });

            modelBuilder.Entity("ProjectFeedbackModule.Domain.Entities.InternProjectFeedback", b =>
                {
                    b.Property<int>("FeedbackId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("FeedbackId"));

                    b.Property<string>("Comment")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EmployeeName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ProjectId")
                        .HasColumnType("int");

                    b.Property<int>("Rating")
                        .HasColumnType("int");

                    b.HasKey("FeedbackId");

                    b.HasIndex("ProjectId");

                    b.ToTable("InternProjectFeedbacks");

                    b.HasData(
                        new
                        {
                            FeedbackId = 1,
                            Comment = "Тест фітбек №1",
                            EmployeeName = "Daniela Kilova",
                            ProjectId = 1,
                            Rating = 8
                        },
                        new
                        {
                            FeedbackId = 2,
                            Comment = "Тест фітбек №2",
                            EmployeeName = "Ethan Douglass",
                            ProjectId = 1,
                            Rating = 6
                        },
                        new
                        {
                            FeedbackId = 3,
                            Comment = ">>Негативний фітбек №1<<",
                            EmployeeName = "Hola Rega",
                            ProjectId = 1,
                            Rating = 2
                        },
                        new
                        {
                            FeedbackId = 4,
                            Comment = "Тест фітбек волонтерка №1",
                            EmployeeName = "Olexander Borozuy",
                            ProjectId = 2,
                            Rating = 10
                        });
                });

            modelBuilder.Entity("ProjectFeedbackModule.Domain.Entities.InternProjectFeedback", b =>
                {
                    b.HasOne("ProjectFeedbackModule.Domain.Entities.InternProject", "Project")
                        .WithMany("Feedbacks")
                        .HasForeignKey("ProjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Project");
                });

            modelBuilder.Entity("ProjectFeedbackModule.Domain.Entities.InternProject", b =>
                {
                    b.Navigation("Feedbacks");
                });
#pragma warning restore 612, 618
        }
    }
}
